name: brew test-bot
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  test-bot:

    name: Homebrew Test Bot (Syntax)
    runs-on: ubuntu-latest

    steps:

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup

      - name: Test syntax of all formulae
        run: brew test-bot --only-tap-syntax

  get-formulae:

    runs-on: ubuntu-latest
    outputs:
      formulae: ${{ steps.get-formulae.outputs.formulae }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get list of all formulae
        id: get-formulae
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const formulae = execSync('find Formula -name "*.rb" ! -name "*@*.rb" -exec basename {} .rb \\;')
              .toString()
              .trim()
              .split('\n');
            const formulaeJson = JSON.stringify(formulae);
            core.setOutput('formulae', formulaeJson);

  test-formulae:

    name: Homebrew Test Bot (Formulae)
    needs: [test-bot, get-formulae]
    if: success()
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        formula: ${{fromJson(needs.get-formulae.outputs.formulae)}}
    runs-on: ${{ matrix.os }}

    steps:

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - name: Test formula ${{ matrix.formula }}
        run: brew test-bot --only-formulae ${{ matrix.formula }}
